version: '3.8'
services:
 db:
  container_name: postgresql
  image: postgres:15
  restart: always
  environment:
   POSTGRES_USER: $POSTGRES_USER
   POSTGRES_PASSWORD: $POSTGRES_PASSWORD
   POSTGRES_DB: scrapper
  volumes:
   - "${POSTGRES_VOLUME}:/var/lib/postgresql/data"
  ports:
   - "${POSTGRES_OUT_PORT}:${POSTGRES_PORT}"
  networks:
   - backend
  healthcheck:
   test: [ "CMD-SHELL", "pg_isready -U postgres" ]
   interval: 10s
   timeout: 10s
   retries: 5

 liquibase-migrations:
  image: liquibase/liquibase:4.18
  restart: on-failure
  depends_on:
   db:
    condition: service_healthy
  command:
   --hub-mode=off
   --changelog-file=master.xml
   --driver=org.postgresql.Driver
   --url=jdbc:postgresql://postgresql:$POSTGRES_PORT/scrapper
   --username=$POSTGRES_USER
   --password=$POSTGRES_PASSWORD
   update
  volumes:
   - ./migrations:/liquibase/changelog
  networks:
   - backend
 rabbitmq:
  image: 'rabbitmq:3-management'
  hostname: rabbitmq
  restart: always
  ports:
   - '5672:5672'
   - '15672:15672'
  environment:
   AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
   RABBITMQ_DEFAULT_USER: ${RABBIT_MQ_USER}
   RABBITMQ_DEFAULT_PASS: ${RABBIT_MQ_PASSWORD}
   RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit disk_free_limit 2147483648
  volumes:
   - rabbit-mq-volume:/var/lib/rabbitmq

 prometheus:
   image: prom/prometheus:latest
   ports:
     - "9090:9090"
   volumes:
     - ./prometheus.yml:/etc/prometheus/prometheus.yml
     - ${TINKOFF_SPRING_PROMETHEUS_VOLUME}:/prometheus
   command:
     - '--config.file=/etc/prometheus/prometheus.yml'
     - '--storage.tsdb.path=/prometheus'
     - '--web.console.libraries=/etc/prometheus/console_libraries'
     - '--web.console.templates=/etc/prometheus/consoles'
     - '--web.enable-lifecycle'
   networks:
     - backend

 grafana:
   image: grafana/grafana-oss
   ports:
     - "3000:3000"
   volumes:
     - ${TINKOFF_SPRING_GRAFANA_VOLUME}:/var/lib/grafana
   environment:
     - GF_SECURITY_ADMIN_USER=admin
     - GF_SECURITY_ADMIN_PASSWORD=admin
     - GF_USERS_ALLOW_SIGN_UP=false
   networks:
     - backend

networks:
 backend:
  driver: bridge

volumes:
 rabbit-mq-volume:
  driver: local
  driver_opts:
   type: none
   device: ${RABBIT_MQ_VOLUME}
   o: bind
